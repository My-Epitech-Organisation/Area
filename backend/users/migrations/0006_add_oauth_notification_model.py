# Generated by Django 5.2.6 on 2025-10-13 09:52

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_enhance_servicetoken_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='OAuthNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(db_index=True, help_text='Name of the affected service (google, github, etc.)', max_length=100)),
                ('notification_type', models.CharField(choices=[('token_expired', 'Token Expired'), ('refresh_failed', 'Token Refresh Failed'), ('auth_error', 'Authentication Error'), ('reauth_required', 'Reauthorization Required')], default='reauth_required', help_text='Type of OAuth2 issue', max_length=50)),
                ('message', models.TextField(help_text='Detailed message about the issue')),
                ('is_read', models.BooleanField(db_index=True, default=False, help_text='Has the user seen this notification')),
                ('is_resolved', models.BooleanField(db_index=True, default=False, help_text='Has the issue been fixed')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the notification was created')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the issue was resolved (e.g., user reconnected)', null=True)),
                ('user', models.ForeignKey(help_text='User who needs to be notified', on_delete=django.db.models.deletion.CASCADE, related_name='oauth_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'OAuth Notification',
                'verbose_name_plural': 'OAuth Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read'], name='users_oauth_user_id_5f8f72_idx'), models.Index(fields=['user', 'is_resolved'], name='users_oauth_user_id_fa0119_idx'), models.Index(fields=['service_name', 'is_resolved'], name='users_oauth_service_4b8b21_idx'), models.Index(fields=['created_at'], name='users_oauth_created_bc91ab_idx')],
            },
        ),
    ]
