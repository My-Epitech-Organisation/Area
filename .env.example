# ============================================================================
# AREA Project - Environment Variables Template
# ============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit .env with real credentials to git!
# ============================================================================

# ============================================================================
# 1. DATABASE CONFIGURATION (PostgreSQL)
# ============================================================================
DB_USER=area_user
DB_PASSWORD=area_password_2024
DB_NAME=area_db
DB_HOST=db
DB_PORT=5432

# ============================================================================
# 2. REDIS CONFIGURATION
# ============================================================================
REDIS_PORT=6379
REDIS_URL=redis://redis:6379/0

# ============================================================================
# 3. DJANGO BACKEND CONFIGURATION
# ============================================================================
BACKEND_PORT=8080
DJANGO_SETTINGS_MODULE=area_project.settings

# SECRET_KEY: Generate a secure random key for production
# Use: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-very-secret-django-key-change-in-production

# DEBUG: Set to False in production!
DEBUG=True

# ENVIRONMENT: Defines which Django settings module to load
# - local      : Local development (venv, SQLite, no Docker)
# - docker     : Docker development (PostgreSQL, Redis, hot reload, DEBUG=True)
# - production : Docker production (PostgreSQL, Redis, security hardened, DEBUG=False)
ENVIRONMENT=docker

# ============================================================================
# 4. DJANGO SUPERUSER (Optional - auto-created on first startup if set)
# ============================================================================
DJANGO_SUPERUSER_EMAIL=admin@areaction.app
DJANGO_SUPERUSER_PASSWORD=change-this-secure-password

# ============================================================================
# 5. LOGGING CONFIGURATION
# ============================================================================
LOG_LEVEL=INFO
DJANGO_LOG_FILE=/app/logs/django.log

# ============================================================================
# 6. JWT AUTHENTICATION
# ============================================================================
# JWT_SIGNING_KEY: Used to sign JWT tokens. Generate a secure random key!
JWT_SIGNING_KEY=your-jwt-signing-key-change-in-production

# ============================================================================
# 7. EMAIL CONFIGURATION (SMTP Gmail)
# ============================================================================
# To use Gmail, create an App Password:
# 1. Go to https://myaccount.google.com/security
# 2. Enable 2-Step Verification
# 3. Go to https://myaccount.google.com/apppasswords
# 4. Create an app password and use it below
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-gmail-app-password-here
DEFAULT_FROM_EMAIL=your-email@gmail.com

# ============================================================================
# 8. FRONTEND CONFIGURATION
# ============================================================================
FRONTEND_PORT=8081
FRONTEND_DEV_PORT=5173
# Frontend URL for OAuth redirects (important for OAuth flow)
# Development: http://localhost:5173
# Production: https://your-frontend-domain.com
FRONTEND_URL=http://localhost:5173

# Vite environment variables (must be prefixed with VITE_ to be exposed to client)
# Development: http://localhost:8080
# Production: https://areaction.app/api
VITE_API_BASE=http://localhost:8080

# ============================================================================
# 9. CORS AND SECURITY SETTINGS
# ============================================================================
# ALLOWED_HOSTS: Comma-separated list of allowed host/domain names
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
# CORS_ALLOW_ALL_ORIGINS: Set to False in production and configure specific origins
CORS_ALLOW_ALL_ORIGINS=True
# Security flags (set to True in production with HTTPS)
SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False

# ============================================================================
# 10. OAUTH2 CONFIGURATION (External Service Authentication)
# ============================================================================
# --- Google OAuth2 ---
# Get credentials from: https://console.cloud.google.com/apis/credentials
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:8080/auth/oauth/google/callback/

# --- GitHub OAuth2 ---
# Get credentials from: https://github.com/settings/developers
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_REDIRECT_URI=http://localhost:8080/auth/oauth/github/callback/

# ============================================================================
# 11. WEBHOOK SECRETS (for validating incoming webhooks)
# ============================================================================
# Generate secure random strings for each webhook secret
# Use: openssl rand -hex 32
GITHUB_WEBHOOK_SECRET=dev_secret_github_123
GMAIL_WEBHOOK_SECRET=dev_secret_gmail_123
WEBHOOK_SECRET=dev_secret_webhook_123

# ============================================================================
# 12. OPENWEATHERMAP CONFIGURATION
# ============================================================================
OPENWEATHERMAP_API_KEY=your-production-openweathermap-api-key

# ============================================================================
# 13. CELERY CONFIGURATION (Task Queue)
# ============================================================================
CELERY_TIMEZONE=UTC
# CELERY_TASK_ALWAYS_EAGER: If True, tasks execute synchronously (useful for testing)
CELERY_TASK_ALWAYS_EAGER=False

# ============================================================================
# 14. MONITORING (Flower - Celery Task Monitor)
# ============================================================================
FLOWER_PORT=5555

# ============================================================================
# 15. DOCKER CONFIGURATION
# ============================================================================
COMPOSE_PROJECT_NAME=area

# ============================================================================
# PRODUCTION DEPLOYMENT NOTES
# ============================================================================
# When deploying to production:
# 1. Set DEBUG=False
# 2. Set ENVIRONMENT=production
# 3. Generate new SECRET_KEY and JWT_SIGNING_KEY
# 4. Set SECURE_SSL_REDIRECT=True
# 5. Set SESSION_COOKIE_SECURE=True
# 6. Set CSRF_COOKIE_SECURE=True
# 7. Set CORS_ALLOW_ALL_ORIGINS=False
# 8. Update ALLOWED_HOSTS with your production domain
# 9. Update all OAuth redirect URIs with production URLs
# 10. Update VITE_API_BASE with production API URL
# 11. Generate strong webhook secrets
# 12. Use real OAuth credentials (not dev placeholders)
# ============================================================================
